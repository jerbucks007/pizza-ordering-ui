{"ast":null,"code":"var _jsxFileName = \"D:\\\\apps\\\\programming\\\\domino_pizza_ordering_ui\\\\src\\\\components\\\\viewOrders.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport KairosPagination from './kairosPagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewOrders() {\n  _s();\n\n  const [order, setOrder] = useState([]);\n  const [curPage, setCurPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(2);\n  const limit = 10;\n\n  const getOrder = async pageNumber => {\n    let uri = `/api/orders`;\n\n    if (pageNumber) {\n      uri = `/api/orders?limit=${limit}&page=${pageNumber}`;\n    }\n\n    await axios.get(uri).then(res => {\n      setOrder(res.data);\n    });\n  };\n\n  const getTotalOrder = async () => {\n    let uri = `/api/orders/total`;\n    await axios.get(uri).then(res => {\n      console.log(Math.ceil(res.data.total / limit));\n      setTotalPage(Math.ceil(res.data.total / limit));\n    });\n  };\n\n  const pageClickHandler = pageNumber => {\n    setCurPage(pageNumber);\n    getOrder(pageNumber);\n  };\n\n  useEffect(() => {\n    getTotalOrder();\n    getOrder(curPage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(KairosPagination, {\n    totPages: totalPage,\n    currentPage: curPage,\n    pageClicked: ele => {\n      pageClickHandler(ele);\n    },\n    children: order.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: order.map(o => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" ORDER NO. \", o.orderData.order.id.number, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewOrders, \"lWqTdVN4F6SiHGsRyUdZuNslH5k=\");\n\n_c = ViewOrders;\nexport default ViewOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrders\");","map":{"version":3,"sources":["D:/apps/programming/domino_pizza_ordering_ui/src/components/viewOrders.jsx"],"names":["React","useEffect","useState","axios","KairosPagination","ViewOrders","order","setOrder","curPage","setCurPage","totalPage","setTotalPage","limit","getOrder","pageNumber","uri","get","then","res","data","getTotalOrder","console","log","Math","ceil","total","pageClickHandler","ele","length","map","o","orderData","id","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,UAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMU,KAAK,GAAG,EAAd;;AAEA,QAAMC,QAAQ,GAAG,MAAOC,UAAP,IAAsB;AACnC,QAAIC,GAAG,GAAI,aAAX;;AACA,QAAGD,UAAH,EAAc;AACVC,MAAAA,GAAG,GAAI,qBAAoBH,KAAM,SAAQE,UAAW,EAApD;AACH;;AACD,UAAMX,KAAK,CAACa,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AAC7BX,MAAAA,QAAQ,CAACW,GAAG,CAACC,IAAL,CAAR;AACH,KAFK,CAAN;AAGH,GARD;;AAUA,QAAMC,aAAa,GAAG,YAAY;AAC9B,QAAIL,GAAG,GAAI,mBAAX;AACA,UAAMZ,KAAK,CAACa,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AAC7BG,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,IAAL,CAAUN,GAAG,CAACC,IAAJ,CAASM,KAAT,GAAeb,KAAzB,CAAZ;AACAD,MAAAA,YAAY,CAACY,IAAI,CAACC,IAAL,CAAUN,GAAG,CAACC,IAAJ,CAASM,KAAT,GAAeb,KAAzB,CAAD,CAAZ;AACH,KAHK,CAAN;AAIH,GAND;;AAQA,QAAMc,gBAAgB,GAAIZ,UAAD,IAAgB;AACrCL,IAAAA,UAAU,CAACK,UAAD,CAAV;AACAD,IAAAA,QAAQ,CAACC,UAAD,CAAR;AACH,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,aAAa;AACbP,IAAAA,QAAQ,CAACL,OAAD,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,QAAC,gBAAD;AACI,IAAA,QAAQ,EAAEE,SADd;AAEI,IAAA,WAAW,EAAEF,OAFjB;AAGI,IAAA,WAAW,EAAGmB,GAAD,IAAS;AAClBD,MAAAA,gBAAgB,CAACC,GAAD,CAAhB;AACH,KALL;AAAA,cAMKrB,KAAK,CAACsB,MAAN,GAAe,CAAf,gBACG;AAAA,gBACKtB,KAAK,CAACuB,GAAN,CAAUC,CAAC,IAAI;AACZ,4BAAO;AAAA,oCAAiBA,CAAC,CAACC,SAAF,CAAYzB,KAAZ,CAAkB0B,EAAlB,CAAqBC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YADH,gBAMI;AAZT;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAnDQ5B,U;;KAAAA,U;AAqDT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport KairosPagination from './kairosPagination';\r\n\r\nfunction ViewOrders () {\r\n\r\n    const [order, setOrder] = useState([]);\r\n    const [curPage, setCurPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(2);\r\n    const limit = 10;\r\n\r\n    const getOrder = async (pageNumber) => {\r\n        let uri = `/api/orders`;\r\n        if(pageNumber){\r\n            uri = `/api/orders?limit=${limit}&page=${pageNumber}`;\r\n        }\r\n        await axios.get(uri).then(res => {\r\n            setOrder(res.data);\r\n        });\r\n    }\r\n\r\n    const getTotalOrder = async () => {\r\n        let uri = `/api/orders/total`;\r\n        await axios.get(uri).then(res => {\r\n            console.log(Math.ceil(res.data.total/limit))\r\n            setTotalPage(Math.ceil(res.data.total/limit));\r\n        });\r\n    } \r\n\r\n    const pageClickHandler = (pageNumber) => {\r\n        setCurPage(pageNumber);\r\n        getOrder(pageNumber);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTotalOrder();\r\n        getOrder(curPage);\r\n    }, []);\r\n\r\n    return (\r\n        <KairosPagination\r\n            totPages={totalPage}\r\n            currentPage={curPage}\r\n            pageClicked={(ele) => {\r\n                pageClickHandler(ele);\r\n            }}>\r\n            {order.length > 0 ? (\r\n                <ul>\r\n                    {order.map(o => {\r\n                        return <li > ORDER NO. {o.orderData.order.id.number} </li>\r\n                    })}\r\n                </ul>\r\n            ) : (<></>)}\r\n        </KairosPagination>\r\n    );\r\n}\r\n\r\nexport default ViewOrders;"]},"metadata":{},"sourceType":"module"}