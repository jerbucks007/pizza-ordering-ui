{"ast":null,"code":"var _jsxFileName = \"D:\\\\apps\\\\programming\\\\domino_pizza_ordering_ui\\\\src\\\\pages\\\\fileUpload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useRef, useState, useContext } from 'react';\nimport { Container, Button, Form, Row, Col, Card } from 'react-bootstrap';\nimport axios from 'axios';\nimport ViewOrderFormat from '../components/viewOrderFormat';\nimport OrderContext from '../contexts/OrderContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload() {\n  _s();\n\n  const fileRef = useRef(null);\n  const [File, setFile] = useState();\n  const {\n    Order,\n    setOrder,\n    modalState,\n    modalDispatch\n  } = useContext(OrderContext);\n\n  const handleSubmit = () => {\n    const formData = new FormData();\n    formData.append('file', fileRef.current.files[0]);\n    axios.post('/api/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      if (res.data.error) {\n        modalDispatch({\n          modalDesc: res.data.error,\n          modalTitle: \"Error Message\",\n          modalShow: true\n        });\n      } else {\n        modalDispatch({\n          modalDesc: \"Order Successfully Added\",\n          modalTitle: \"Success Message\",\n          modalShow: true\n        });\n        setOrder(res.data.orderData.order);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 5,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          style: {\n            paddingTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Default file input example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            ref: fileRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleSubmit(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              marginTop: \"1rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Featured\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), Order.id ? /*#__PURE__*/_jsxDEV(Card.Body, {\n              style: {\n                maxHeight: \"400px\",\n                overflowY: \"scroll\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Order \", Order.id.number, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ViewOrderFormat, {\n                Order: Order\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"8/osuwEMmo0iC33ExORAM8ditdE=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["D:/apps/programming/domino_pizza_ordering_ui/src/pages/fileUpload.jsx"],"names":["React","Component","useRef","useState","useContext","Container","Button","Form","Row","Col","Card","axios","ViewOrderFormat","OrderContext","FileUpload","fileRef","File","setFile","Order","setOrder","modalState","modalDispatch","handleSubmit","formData","FormData","append","current","files","post","headers","then","res","data","error","modalDesc","modalTitle","modalShow","orderData","order","paddingTop","marginTop","id","maxHeight","overflowY","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAwD,iBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAElB,QAAMC,OAAO,GAAGb,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,EAAhC;AACA,QAAM;AAAEe,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,MAAiDjB,UAAU,CAACS,YAAD,CAAjE;;AAEA,QAAMS,YAAY,GAAG,MAAM;AAEvB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBV,OAAO,CAACW,OAAR,CAAgBC,KAAhB,CAAsB,CAAtB,CAAxB;AAEAhB,IAAAA,KAAK,CAACiB,IAAN,CAAW,aAAX,EAA0BL,QAA1B,EAAoC;AAChCM,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB;AADuB,KAApC,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,IAAJ,CAASC,KAAZ,EAAkB;AACdZ,QAAAA,aAAa,CAAC;AAACa,UAAAA,SAAS,EAAEH,GAAG,CAACC,IAAJ,CAASC,KAArB;AAA4BE,UAAAA,UAAU,EAAE,eAAxC;AAAyDC,UAAAA,SAAS,EAAE;AAApE,SAAD,CAAb;AACH,OAFD,MAEK;AACDf,QAAAA,aAAa,CAAC;AAACa,UAAAA,SAAS,EAAE,0BAAZ;AAAwCC,UAAAA,UAAU,EAAE,iBAApD;AAAuEC,UAAAA,SAAS,EAAE;AAAlF,SAAD,CAAb;AACAjB,QAAAA,QAAQ,CAACY,GAAG,CAACC,IAAJ,CAASK,SAAT,CAAmBC,KAApB,CAAR;AACH;AACJ,KATD;AAWH,GAhBD;;AAkBA,sBACI,QAAC,SAAD;AAAA,2BACA,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,UAAtB;AAAiC,UAAA,SAAS,EAAC,MAA3C;AAAkD,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAAzD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,GAAG,EAAExB;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,MAAMO,YAAY,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,+BACI,QAAC,SAAD;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACkB,cAAAA,SAAS,EAAE;AAAZ,aAAb;AAAA,oCACA,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEMtB,KAAK,CAACuB,EAAN,gBACM,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,KAAK,EAAE;AAACC,gBAAAA,SAAS,EAAC,OAAX;AAAoBC,gBAAAA,SAAS,EAAE;AAA/B,eAAlB;AAAA,sCACI;AAAA,qCAAYzB,KAAK,CAACuB,EAAN,CAASG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAE1B;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADN,gBAME;AAAA;AAAA;AAAA;AAAA,oBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAtDQJ,U;;KAAAA,U;AAwDT,eAAeA,UAAf","sourcesContent":["import React, { Component, useRef, useState, useContext } from 'react';\r\nimport { Container, Button, Form, Row, Col, Card } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ViewOrderFormat from '../components/viewOrderFormat';\r\nimport OrderContext from '../contexts/OrderContext';\r\n\r\nfunction FileUpload() {\r\n\r\n    const fileRef = useRef(null);\r\n    const [File, setFile] = useState();\r\n    const { Order, setOrder, modalState, modalDispatch } = useContext(OrderContext);\r\n\r\n    const handleSubmit = () => {\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', fileRef.current.files[0]);\r\n\r\n        axios.post('/api/upload', formData, {\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(res => {\r\n            if(res.data.error){\r\n                modalDispatch({modalDesc: res.data.error, modalTitle: \"Error Message\", modalShow: true})\r\n            }else{\r\n                modalDispatch({modalDesc: \"Order Successfully Added\", modalTitle: \"Success Message\", modalShow: true})\r\n                setOrder(res.data.orderData.order);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <Row>\r\n            <Col xs={12} md={5}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\" style={{paddingTop: \"1rem\"}}>\r\n                    <Form.Label>Default file input example</Form.Label>\r\n                    <Form.Control type=\"file\" ref={fileRef}/>\r\n                </Form.Group>\r\n                <div>\r\n                    <Button variant=\"primary\" onClick={() => handleSubmit()}>Submit</Button>\r\n                </div>\r\n            </Col>\r\n            <Col xs={12} md={7}>\r\n                <Container>\r\n                    <Card style={{marginTop: \"1rem\"}}>\r\n                    <Card.Header>Featured</Card.Header>\r\n                        { Order.id ? (\r\n                                <Card.Body style={{maxHeight:\"400px\", overflowY: \"scroll\"}}>\r\n                                    <div>Order {Order.id.number}:</div>\r\n                                    <ViewOrderFormat Order={Order} />\r\n                                </Card.Body>\r\n                        ) : (\r\n                            <div></div>\r\n                        )}\r\n                    </Card>\r\n                </Container>\r\n            </Col>\r\n        </Row>          \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}