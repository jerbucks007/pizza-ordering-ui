{"ast":null,"code":"var _jsxFileName = \"D:\\\\apps\\\\programming\\\\domino_pizza_ordering_ui\\\\src\\\\components\\\\viewOrderFormat.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewOrderFormat({\n  Order\n}) {\n  const toppingsArea = area => {\n    if (area == \"0\") return \"Whole\";else if (area == \"1\") return \"First-Half\";else if (area == \"2\") return \"Second-Half\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"150px\",\n      overflow: \"auto\"\n    },\n    children: Order.pizza.map((pizza, pizzaIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textIndent: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Pizza \", pizza.id.number, \" - \", pizza.size[0], \", \", pizza.crust[0], \", \", pizza.type[0]]\n        }, pizza.id.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), pizza.toppings ? pizza.toppings.map((toppings, toppingIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textIndent: '100px'\n            },\n            children: [\"Toppings \", toppingsArea(toppings.id.area), \" \", toppings.item.map((i, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textIndent: '150px'\n                },\n                children: i\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 40\n              }, this);\n            }), \" \"]\n          }, toppingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 32\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, pizzaIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ViewOrderFormat;\nexport default ViewOrderFormat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrderFormat\");","map":{"version":3,"sources":["D:/apps/programming/domino_pizza_ordering_ui/src/components/viewOrderFormat.jsx"],"names":["React","ViewOrderFormat","Order","toppingsArea","area","height","overflow","pizza","map","pizzaIndex","textIndent","id","number","size","crust","type","toppings","toppingIndex","item","i","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,eAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAkC;AAE9B,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3B,QAAGA,IAAI,IAAI,GAAX,EACI,OAAO,OAAP,CADJ,KAEK,IAAGA,IAAI,IAAI,GAAX,EACD,OAAO,YAAP,CADC,KAEA,IAAGA,IAAI,IAAI,GAAX,EACD,OAAO,aAAP;AACP,GAPD;;AASA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,OAAT;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAAZ;AAAA,cACEJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,CAACD,KAAD,EAAQE,UAAR,KAAuB;AACrC,0BACA;AAAsB,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAA7B;AAAA,gCACI;AAAA,gCAAmCH,KAAK,CAACI,EAAN,CAASC,MAA5C,SAAuDL,KAAK,CAACM,IAAN,CAAW,CAAX,CAAvD,QAAwEN,KAAK,CAACO,KAAN,CAAY,CAAZ,CAAxE,QAA0FP,KAAK,CAACQ,IAAN,CAAW,CAAX,CAA1F;AAAA,WAAUR,KAAK,CAACI,EAAN,CAASC,MAAnB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEML,KAAK,CAACS,QAAN,GACET,KAAK,CAACS,QAAN,CAAeR,GAAf,CAAmB,CAACQ,QAAD,EAAWC,YAAX,KAA4B;AAC3C,8BAAO;AAAwB,YAAA,KAAK,EAAE;AAACP,cAAAA,UAAU,EAAC;AAAZ,aAA/B;AAAA,oCAA+DP,YAAY,CAACa,QAAQ,CAACL,EAAT,CAAYP,IAAb,CAA3E,OACHY,QAAQ,CAACE,IAAT,CAAcV,GAAd,CAAkB,CAACW,CAAD,EAAIC,KAAJ,KAAc;AAC5B,kCAAO;AAAiB,gBAAA,KAAK,EAAE;AAACV,kBAAAA,UAAU,EAAC;AAAZ,iBAAxB;AAAA,0BAA+CS;AAA/C,iBAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD,CADG;AAAA,aAAUH,YAAV;AAAA;AAAA;AAAA;AAAA,kBAAP;AAKH,SAND,CADF,gBAQG,qCAVT;AAAA,SAAUR,UAAV;AAAA;AAAA;AAAA;AAAA,cADA;AAcH,KAfC;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;KA/BQR,e;AAiCT,eAAeA,eAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction ViewOrderFormat ({Order}){\r\n\r\n    const toppingsArea = (area) => {\r\n        if(area == \"0\")\r\n            return \"Whole\";\r\n        else if(area == \"1\")\r\n            return \"First-Half\";\r\n        else if(area == \"2\")\r\n            return \"Second-Half\";\r\n    }\r\n\r\n    return (\r\n        <div style={{height: \"150px\", overflow: \"auto\"}}>\r\n        { Order.pizza.map((pizza, pizzaIndex) => {\r\n            return (\r\n            <div key={pizzaIndex} style={{textIndent:'50px'}}>\r\n                <div key={pizza.id.number}> Pizza {pizza.id.number} - {pizza.size[0]}, {pizza.crust[0]}, {pizza.type[0]}</div> \r\n                { pizza.toppings ? (\r\n                    pizza.toppings.map((toppings, toppingIndex) => {\r\n                        return <div key={toppingIndex} style={{textIndent:'100px'}}>Toppings {toppingsArea(toppings.id.area)} {\r\n                            toppings.item.map((i, index) => {\r\n                                return <div key={index} style={{textIndent:'150px'}}>{i}</div>\r\n                            })\r\n                        } </div>\r\n                    })\r\n                ) : (<></>)\r\n                } \r\n            </div>);\r\n        }) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewOrderFormat;"]},"metadata":{},"sourceType":"module"}