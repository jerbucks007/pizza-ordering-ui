{"ast":null,"code":"var _jsxFileName = \"D:\\\\apps\\\\programming\\\\domino_pizza_ordering_ui\\\\src\\\\pages\\\\inputOrders.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef } from 'react';\nimport { Container, Button, Form, Row, Col, Card } from 'react-bootstrap';\nimport ViewOrderFormat from '../components/viewOrderFormat';\nimport OrderContext from '../contexts/OrderContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputOrders() {\n  _s();\n\n  const textAreaRef = useRef(null);\n  const {\n    Order,\n    setOrder,\n    modalState,\n    modalDispatch\n  } = useContext(OrderContext);\n\n  const handleSubmit = () => {\n    const formData = new FormData();\n    formData.append('textarea', textAreaRef.current.value);\n    axios.post('/api/textarea', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      if (res.data.error) modalDispatch({\n        modalDesc: res.data.error,\n        modalTitle: \"Error Message\",\n        modalShow: true\n      });else {\n        modalDispatch({\n          modalDesc: \"Order Successfully Added\",\n          modalTitle: \"Success Message\",\n          modalShow: true\n        });\n        setOrder(res.data.orderData.order);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 5,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          style: {\n            paddingTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Example textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            ref: textAreaRef,\n            style: {\n              minHeight: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleSubmit(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Order View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), Order.id ? /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              maxHeight: \"400px\",\n              overflowY: \"scroll\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Order \", Order.id.number, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ViewOrderFormat, {\n              Order: Order\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputOrders, \"lG2qiSSRQcx657dSww5o7H7EsFA=\");\n\n_c = InputOrders;\nexport default InputOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputOrders\");","map":{"version":3,"sources":["D:/apps/programming/domino_pizza_ordering_ui/src/pages/inputOrders.jsx"],"names":["React","useContext","useRef","Container","Button","Form","Row","Col","Card","ViewOrderFormat","OrderContext","axios","InputOrders","textAreaRef","Order","setOrder","modalState","modalDispatch","handleSubmit","formData","FormData","append","current","value","post","headers","then","res","data","error","modalDesc","modalTitle","modalShow","orderData","order","paddingTop","minHeight","marginTop","id","maxHeight","overflowY","number"],"mappings":"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","sourcesContent":["import React, { useContext, useRef } from 'react';\r\nimport { Container, Button, Form, Row, Col, Card } from 'react-bootstrap';\r\nimport ViewOrderFormat from '../components/viewOrderFormat';\r\nimport OrderContext from '../contexts/OrderContext';\r\nimport axios from 'axios';\r\n\r\nfunction InputOrders () {\r\n\r\n    const textAreaRef = useRef(null);\r\n    const { Order, setOrder, modalState, modalDispatch } = useContext(OrderContext);\r\n\r\n    const handleSubmit = () => {\r\n\r\n        const formData = new FormData();\r\n        formData.append('textarea', textAreaRef.current.value);\r\n\r\n        axios.post('/api/textarea', formData, {\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(res => {\r\n            if(res.data.error)\r\n                modalDispatch({modalDesc: res.data.error, modalTitle: \"Error Message\", modalShow: true})\r\n            else{\r\n                modalDispatch({modalDesc: \"Order Successfully Added\", modalTitle: \"Success Message\", modalShow: true});\r\n                setOrder(res.data.orderData.order);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <Row>\r\n            <Col xs={12} md={5}>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\" style={{paddingTop: \"1rem\"}}>\r\n                    <Form.Label>Example textarea</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} ref={textAreaRef} style={{minHeight: '200px'}} />\r\n                </Form.Group>\r\n                <div>\r\n                    <Button variant=\"primary\" onClick={() => handleSubmit()} >Submit</Button>\r\n                </div>\r\n            </Col>\r\n            <Col xs={12} md={7}>\r\n                \r\n                    <Card style={{marginTop: \"1rem\"}}>\r\n                    <Card.Header>Order View</Card.Header>\r\n                        { Order.id ? (\r\n                                <Card.Body style={{maxHeight:\"400px\", overflowY: \"scroll\"}}>\r\n                                    <div>Order {Order.id.number}:</div>\r\n                                    <ViewOrderFormat Order={Order} />\r\n                                </Card.Body>\r\n                        ) : (\r\n                            <div></div>\r\n                        )}\r\n                    </Card>\r\n                \r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default InputOrders;"]},"metadata":{},"sourceType":"module"}